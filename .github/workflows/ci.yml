name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint-and-test:
    name: Lint, Type Check & Test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./messageai

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: messageai/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: true

    - name: Run Prettier check
      run: npm run format:check
      continue-on-error: true

    - name: Run tests
      run: npm test
      continue-on-error: true

    - name: Expo Doctor
      run: npx expo doctor
      continue-on-error: true

  expo-prebuild:
    name: Expo Prebuild Verification
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./messageai

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: messageai/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Setup Expo CLI
      run: npm install -g @expo/cli

    - name: Expo prebuild dry run
      run: npx expo prebuild --no-install --platform all
      env:
        EXPO_NO_TELEMETRY: 1

  build-test:
    name: Build Test (EAS)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    
    defaults:
      run:
        working-directory: ./messageai

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: messageai/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Setup EAS CLI
      run: npm install -g eas-cli

    - name: EAS Build (Android Preview)
      run: eas build --platform android --profile preview --non-interactive --no-wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      continue-on-error: true

  firebase-rules-validate:
    name: Validate Firebase Rules
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js  
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Validate Firestore rules
      run: firebase firestore:rules --project=default
      continue-on-error: true

    - name: Validate Realtime Database rules  
      run: firebase database:rules:validate database.rules.json
      continue-on-error: true
